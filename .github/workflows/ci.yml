name: Go CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  lint-test:
    name: Lint and Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: askfrank_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      # Database configuration for tests
      DB_HOST: localhost
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: askfrank_test
      DB_SSL_MODE: disable
      # OpenTelemetry configuration (disabled for CI)
      OTEL_ENABLED: false
      # Test environment
      ENVIRONMENT: test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Dependencies
        run: make deps

      - name: Generate Code
        run: make generate

      - name: Lint Code
        run: make lint

      - name: Run Unit Tests
        run: make test-unit

      - name: Run Integration Tests
        run: make test-integration

      - name: Generate Coverage Report
        run: make test-coverage

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Upload Coverage Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-reports
          path: |
            coverage.out
            coverage-unit.html
            coverage-integration.html
          retention-days: 30

      - name: Build Application
        run: make build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: askfrank-binary
          path: bin/askfrank
          retention-days: 7