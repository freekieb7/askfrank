package view

import "askfrank/resources/view/component"
import "github.com/gofiber/fiber/v2"

templ LoginPage(c *fiber.Ctx) {
	@component.Layout("Login - AskFrank", c) {
		<div class="min-h-screen bg-gradient-to-br from-white to-[#EAF2EF] flex items-center justify-center py-8 px-3 sm:px-4 lg:px-6">
			<div class="max-w-md w-full space-y-6">
				<div class="text-center">
					<div class="mx-auto w-16 h-16 bg-[#05668D] rounded-full flex items-center justify-center mb-4">
						<i class="fas fa-lock text-2xl text-white"></i>
					</div>
					<h2 class="mt-4 text-2xl font-bold text-[#05668D] heading">
						Sign in to your account
					</h2>
					<p class="mt-1 text-sm text-[#464646]">
						Or
						<a href="/auth/sign-up/create-user" class="font-medium text-[#02C39A] hover:text-[#028090] underline">
							create a new account
						</a>
					</p>
				</div>
				<div class="bg-white rounded-lg shadow-lg p-6">
					<form id="loginForm" class="space-y-4" action="/auth/login" method="POST">
						<input type="hidden" name="remember" value="true"/>
						<!-- Error message display -->
						<div id="error-message" class="hidden p-4 bg-red-50 border border-red-200 rounded-md">
							<div class="flex">
								<div class="flex-shrink-0">
									<svg class="h-5 w-5 text-red-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
										<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
									</svg>
								</div>
								<div class="ml-3">
									<h3 class="text-sm font-medium text-red-800" id="error-text">
										<!-- Error message will be inserted here -->
									</h3>
								</div>
							</div>
						</div>
						<!-- Success message display -->
						<div id="success-message" class="hidden p-4 bg-green-50 border border-green-200 rounded-md">
							<div class="flex">
								<div class="flex-shrink-0">
									<svg class="h-5 w-5 text-green-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
										<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
									</svg>
								</div>
								<div class="ml-3">
									<h3 class="text-sm font-medium text-green-800" id="success-text">
										<!-- Success message will be inserted here -->
									</h3>
								</div>
							</div>
						</div>
						<div>
							<label for="email-address" class="block text-sm font-medium text-[#464646] mb-1">Email address</label>
							<input
								id="email-address"
								name="email"
								type="email"
								autocomplete="email"
								required
								class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-[#02C39A] focus:border-[#02C39A] transition-colors duration-200"
								placeholder="Enter your email"
							/>
						</div>
						<div>
							<label for="password" class="block text-sm font-medium text-[#464646] mb-1">Password</label>
							<input
								id="password"
								name="password"
								type="password"
								autocomplete="current-password"
								required
								class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-[#02C39A] focus:border-[#02C39A] transition-colors duration-200"
								placeholder="Enter your password"
							/>
						</div>
						<div class="flex items-center justify-between">
							<div class="flex items-center">
								<input
									id="remember-me"
									name="remember-me"
									type="checkbox"
									class="h-4 w-4 text-[#02C39A] focus:ring-[#02C39A] border-gray-300 rounded"
								/>
								<label for="remember-me" class="ml-2 block text-sm text-[#464646]">
									Remember me
								</label>
							</div>
							<div class="text-sm">
								<a href="/auth/forgot-password" class="font-medium text-[#02C39A] hover:text-[#028090] underline">
									Forgot your password?
								</a>
							</div>
						</div>
						<div class="pt-2">
							<button
								type="submit"
								class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-[#05668D] hover:bg-[#028090] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#02C39A] transition-colors duration-200"
							>
								<span class="absolute left-0 inset-y-0 flex items-center pl-3">
									<svg class="h-5 w-5 text-white opacity-75" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
										<path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd"></path>
									</svg>
								</span>
								Sign in
							</button>
						</div>
					</form>
				</div>
				<div class="mt-4 text-center">
					<p class="text-xs text-[#464646]">
						By signing in, you agree to our terms of service and privacy policy.
					</p>
				</div>
			</div>
		</div>
		<script>
			// Handle form submission with AJAX for better UX
			document.querySelector('#loginForm').addEventListener('submit', async function(e) {
				e.preventDefault();
				
				const formData = new FormData(this);
				const errorDiv = document.getElementById('error-message');
				const successDiv = document.getElementById('success-message');
				const errorText = document.getElementById('error-text');
				const successText = document.getElementById('success-text');
				const submitButton = this.querySelector('button[type="submit"]');
				
				// Hide previous messages
				errorDiv.classList.add('hidden');
				successDiv.classList.add('hidden');
				
				// Disable submit button during request
				submitButton.disabled = true;
				submitButton.textContent = 'Signing in...';
				
				try {
					const csrfToken = document.querySelector('meta[name="csrf-token"]').content;
					const response = await fetch('/auth/login', {
						method: 'POST',
						body: formData,
						headers: {
							'X-CSRF-Token': csrfToken
						}
					});
					
					if (response.redirected) {
						// Successful login, redirect
						successText.textContent = 'Login successful! Redirecting...';
						successDiv.classList.remove('hidden');
						setTimeout(() => {
							window.location.href = response.url;
						}, 1000);
						return;
					}
					
					const result = await response.json();
					
					if (!response.ok) {
						// Show error message
						errorText.textContent = result.error || 'Login failed';
						errorDiv.classList.remove('hidden');
					} else {
						// Show success message
						successText.textContent = 'Login successful! Redirecting...';
						successDiv.classList.remove('hidden');
						setTimeout(() => {
							window.location.href = '/account';
						}, 1000);
					}
				} catch (error) {
					errorText.textContent = 'Network error. Please try again.';
					errorDiv.classList.remove('hidden');
				} finally {
					// Re-enable submit button
					submitButton.disabled = false;
					submitButton.textContent = 'Sign in';
				}
			});
			
			// Check for URL parameters to show messages
			const urlParams = new URLSearchParams(window.location.search);
			if (urlParams.get('registered') === 'true') {
				const successDiv = document.getElementById('success-message');
				const successText = document.getElementById('success-text');
				successText.textContent = 'Account created successfully! Please sign in.';
				successDiv.classList.remove('hidden');
			}
			if (urlParams.get('logout') === 'true') {
				const successDiv = document.getElementById('success-message');
				const successText = document.getElementById('success-text');
				successText.textContent = 'You have been successfully logged out.';
				successDiv.classList.remove('hidden');
			}
		</script>
	}
}
