// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "hp/internal/web/views/component"

type MeetingsPageProps struct {
	component.AppLayoutProps
}

func MeetingsPage(props MeetingsPageProps) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"main-content\"><div class=\"p-6\"><div class=\"page-header\"><h1 class=\"page-title\">Create New Meeting</h1><p class=\"page-subtitle\">Start a new video conference</p></div><div class=\"card\"><div class=\"p-4 border-b border-gray-200 dark:border-gray-700\"><h2 class=\"card-title mb-0\">Meeting Options</h2></div><div class=\"p-6\"><div class=\"mb-4\"><label for=\"meetingName\" class=\"form-label\">Meeting Name (Optional)</label> <input type=\"text\" id=\"meetingName\" class=\"form-input\" placeholder=\"My Meeting\"></div><div class=\"mb-6\"><label for=\"meetingId\" class=\"form-label\">Meeting ID</label><div class=\"input-group\"><input type=\"text\" id=\"meetingId\" class=\"input-group-input form-input\" placeholder=\"Generate or enter meeting ID\" readonly> <button type=\"button\" id=\"generateMeetingId\" class=\"input-group-button\" onclick=\"generateRandomMeetingId()\"><i class=\"fas fa-sync-alt\"></i></button></div></div><div class=\"flex justify-end\"><button type=\"button\" id=\"startMeetingBtn\" class=\"btn-primary w-auto\" onclick=\"startMeeting()\">Start Meeting</button></div></div></div></div></div><script>\n            function generateRandomMeetingId() {\n                const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n                let result = '';\n                for (let i = 0; i < 10; i++) {\n                    result += chars.charAt(Math.floor(Math.random() * chars.length));\n                }\n                document.getElementById('meetingId').value = result;\n            }\n            \n            // Generate a meeting ID on page load\n            document.addEventListener('DOMContentLoaded', generateRandomMeetingId);\n            \n            function startMeeting() {\n                const meetingId = document.getElementById('meetingId').value;\n                if (!meetingId) {\n                    alert('Please generate a meeting ID first');\n                    return;\n                }\n                \n                window.location.href = `/meetings/${meetingId}`;\n            }\n        </script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = component.AppLayout(props.AppLayoutProps).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
