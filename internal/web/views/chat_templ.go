// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "hp/internal/web/views/component"

type ChatPageProps struct {
	component.AppLayoutProps
	SuccessMsg string
	ErrorMsg   string
}

func ChatPage(props ChatPageProps) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"h-screen flex flex-col bg-gray-50 dark:bg-gray-900\"><!-- Chat Header --><div class=\"bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 p-4 shadow-sm\"><div class=\"flex items-center justify-between\"><div class=\"flex items-center space-x-3\"><div class=\"w-10 h-10 bg-blue-500 rounded-full flex items-center justify-center\"><i class=\"fas fa-comments text-white\"></i></div><div><h1 class=\"text-xl font-semibold text-gray-900 dark:text-white\">Team Chat</h1><p class=\"text-sm text-gray-500 dark:text-gray-400\"><span id=\"connectionStatus\" class=\"inline-flex items-center\"><span class=\"w-2 h-2 bg-gray-400 rounded-full mr-1\"></span> Connecting...</span></p></div></div><div class=\"flex items-center space-x-2\"><span id=\"userCount\" class=\"text-sm text-gray-500 dark:text-gray-400\">0 users online</span> <button id=\"settingsBtn\" class=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700\"><i class=\"fas fa-cog\"></i></button></div></div></div><!-- Chat Messages Container --><div class=\"flex-1 flex\"><!-- Main Chat Area --><div class=\"flex-1 flex flex-col\"><!-- Messages Area --><div id=\"chatBox\" class=\"flex-1 overflow-y-auto p-4 space-y-4 bg-gray-50 dark:bg-gray-900\"><!-- Welcome message --><div class=\"flex justify-center\"><div class=\"bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 px-4 py-2 rounded-full text-sm\">Welcome to the chat! Start a conversation.</div></div></div><!-- Typing Indicator --><div id=\"typingIndicator\" class=\"px-4 py-2 text-sm text-gray-500 dark:text-gray-400 hidden\"><div class=\"flex items-center space-x-2\"><div class=\"flex space-x-1\"><div class=\"w-1 h-1 bg-gray-400 rounded-full animate-bounce\"></div><div class=\"w-1 h-1 bg-gray-400 rounded-full animate-bounce\" style=\"animation-delay: 0.1s;\"></div><div class=\"w-1 h-1 bg-gray-400 rounded-full animate-bounce\" style=\"animation-delay: 0.2s;\"></div></div><span>Someone is typing...</span></div></div><!-- Message Input Area --><div class=\"bg-white dark:bg-gray-800 border-t border-gray-200 dark:border-gray-700 p-4\"><div class=\"flex items-end space-x-3\"><!-- User Avatar --><div class=\"w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center text-white text-sm font-semibold flex-shrink-0\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if len(props.UserInfo.Name) > 0 {
				var templ_7745c5c3_Var3 string
				templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(string(props.UserInfo.Name[0]))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/views/chat.templ`, Line: 69, Col: 41}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			} else {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "U")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</div><!-- Message Input --><div class=\"flex-1 relative\"><textarea id=\"messageInput\" rows=\"1\" class=\"w-full resize-none border border-gray-300 dark:border-gray-600 rounded-lg px-4 py-3 pr-12 bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:ring-2 focus:ring-blue-500 focus:border-transparent\" placeholder=\"Type a message... (Press Enter to send, Shift+Enter for new line)\" style=\"min-height: 44px; max-height: 120px;\"></textarea><!-- Emoji Button --><button id=\"emojiBtn\" class=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 p-1\"><i class=\"fas fa-smile\"></i></button></div><!-- Send Button --><button id=\"sendBtn\" class=\"bg-blue-500 hover:bg-blue-600 disabled:bg-gray-300 disabled:cursor-not-allowed text-white p-3 rounded-lg transition-colors duration-200 flex-shrink-0\"><i class=\"fas fa-paper-plane\"></i></button></div></div></div><!-- Online Users Sidebar --><div class=\"w-64 bg-white dark:bg-gray-800 border-l border-gray-200 dark:border-gray-700 hidden lg:block\"><div class=\"p-4 border-b border-gray-200 dark:border-gray-700\"><h3 class=\"font-medium text-gray-900 dark:text-white\">Online Users</h3></div><div id=\"usersList\" class=\"p-4 space-y-2\"><!-- Online users will be populated here --><div class=\"flex items-center space-x-3 p-2\"><div class=\"relative\"><div class=\"w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center text-white text-sm font-semibold\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if len(props.UserInfo.Name) > 0 {
				var templ_7745c5c3_Var4 string
				templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(string(props.UserInfo.Name[0]))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/views/chat.templ`, Line: 106, Col: 42}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			} else {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "U")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "</div><div class=\"absolute -bottom-0.5 -right-0.5 w-3 h-3 bg-green-500 border-2 border-white dark:border-gray-800 rounded-full\"></div></div><div class=\"flex-1\"><div class=\"text-sm font-medium text-gray-900 dark:text-white\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var5 string
			templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(props.UserInfo.Name)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/views/chat.templ`, Line: 114, Col: 92}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, " (You)</div><div class=\"text-xs text-gray-500 dark:text-gray-400\">Online</div></div></div></div></div></div></div><script>\n\t\t\t// Configuration\n\t\t\tconst currentUser = {\n\t\t\t\tname: \"{ props.UserInfo.Name }\",\n\t\t\t\tid: 'user_' + Math.random().toString(36).substr(2, 9)\n\t\t\t};\n\t\t\t\n\t\t\t// WebSocket connection\n\t\t\tconst ws = new WebSocket(\"ws://\" + window.location.host + \"/ws/chat\");\n\t\t\t\n\t\t\t// DOM elements\n\t\t\tconst chatBox = document.getElementById(\"chatBox\");\n\t\t\tconst messageInput = document.getElementById(\"messageInput\");\n\t\t\tconst sendBtn = document.getElementById(\"sendBtn\");\n\t\t\tconst connectionStatus = document.getElementById(\"connectionStatus\");\n\t\t\tconst userCount = document.getElementById(\"userCount\");\n\t\t\tconst typingIndicator = document.getElementById(\"typingIndicator\");\n\t\t\tconst usersList = document.getElementById(\"usersList\");\n\t\t\t\n\t\t\t// State\n\t\t\tlet isTyping = false;\n\t\t\tlet typingTimeout = null;\n\t\t\tlet onlineUsers = new Set([currentUser.id]);\n\t\t\t\n\t\t\t// Auto-resize textarea\n\t\t\tmessageInput.addEventListener('input', function() {\n\t\t\t\tthis.style.height = 'auto';\n\t\t\t\tthis.style.height = Math.min(this.scrollHeight, 120) + 'px';\n\t\t\t\t\n\t\t\t\t// Handle typing indicator\n\t\t\t\tif (this.value.length > 0 && !isTyping) {\n\t\t\t\t\tisTyping = true;\n\t\t\t\t\t// Send typing start (if implemented on backend)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tclearTimeout(typingTimeout);\n\t\t\t\ttypingTimeout = setTimeout(() => {\n\t\t\t\t\tisTyping = false;\n\t\t\t\t\t// Send typing stop (if implemented on backend)\n\t\t\t\t}, 1000);\n\t\t\t});\n\t\t\t\n\t\t\t// Send message on Enter (not Shift+Enter)\n\t\t\tmessageInput.addEventListener('keydown', function(e) {\n\t\t\t\tif (e.key === 'Enter' && !e.shiftKey) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tsendMessage();\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\t// Send button click\n\t\t\tsendBtn.addEventListener('click', sendMessage);\n\t\t\t\n\t\t\t// WebSocket event handlers\n\t\t\tws.onopen = () => {\n\t\t\t\tconsole.log('Connected to chat');\n\t\t\t\tupdateConnectionStatus('connected', 'Connected');\n\t\t\t\tsendBtn.disabled = false;\n\t\t\t};\n\t\t\t\n\t\t\tws.onclose = () => {\n\t\t\t\tconsole.log('Disconnected from chat');\n\t\t\t\tupdateConnectionStatus('disconnected', 'Disconnected');\n\t\t\t\tsendBtn.disabled = true;\n\t\t\t};\n\t\t\t\n\t\t\tws.onerror = (error) => {\n\t\t\t\tconsole.error('WebSocket error:', error);\n\t\t\t\tupdateConnectionStatus('error', 'Connection Error');\n\t\t\t\tsendBtn.disabled = true;\n\t\t\t};\n\t\t\t\n\t\t\tws.onmessage = (event) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst data = JSON.parse(event.data);\n\t\t\t\t\thandleMessage(data);\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// Handle plain text messages (backward compatibility)\n\t\t\t\t\taddMessage({\n\t\t\t\t\t\ttype: 'message',\n\t\t\t\t\t\tuser: 'Anonymous',\n\t\t\t\t\t\tcontent: event.data,\n\t\t\t\t\t\ttimestamp: new Date().toISOString()\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\t// Message handling\n\t\t\tfunction sendMessage() {\n\t\t\t\tconst content = messageInput.value.trim();\n\t\t\t\tif (!content || ws.readyState !== WebSocket.OPEN) return;\n\t\t\t\t\n\t\t\t\tconst message = {\n\t\t\t\t\ttype: 'message',\n\t\t\t\t\tuser: currentUser.name,\n\t\t\t\t\tuserId: currentUser.id,\n\t\t\t\t\tcontent: content,\n\t\t\t\t\ttimestamp: new Date().toISOString()\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tws.send(JSON.stringify(message));\n\t\t\t\tmessageInput.value = '';\n\t\t\t\tmessageInput.style.height = 'auto';\n\t\t\t}\n\t\t\t\n\t\t\tfunction handleMessage(data) {\n\t\t\t\tswitch (data.type) {\n\t\t\t\t\tcase 'message':\n\t\t\t\t\t\taddMessage(data);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'user_joined':\n\t\t\t\t\t\thandleUserJoined(data);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'user_left':\n\t\t\t\t\t\thandleUserLeft(data);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'typing_start':\n\t\t\t\t\t\tshowTypingIndicator(data.user);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'typing_stop':\n\t\t\t\t\t\thideTypingIndicator();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfunction addMessage(data) {\n\t\t\t\tconst messageDiv = document.createElement('div');\n\t\t\t\tconst isOwnMessage = data.userId === currentUser.id;\n\t\t\t\tconst timestamp = new Date(data.timestamp).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'});\n\t\t\t\t\n\t\t\t\tmessageDiv.className = `flex ${isOwnMessage ? 'justify-end' : 'justify-start'}`;\n\t\t\t\tmessageDiv.innerHTML = `\n\t\t\t\t\t<div class=\"max-w-xs lg:max-w-md ${isOwnMessage ? 'order-1' : 'order-2'}\">\n\t\t\t\t\t\t<div class=\"${isOwnMessage ? 'bg-blue-500 text-white' : 'bg-white dark:bg-gray-700 text-gray-900 dark:text-white'} rounded-lg px-4 py-2 shadow-sm\">\n\t\t\t\t\t\t\t${isOwnMessage ? '' : '<div class=\"text-xs font-medium mb-1 text-gray-600 dark:text-gray-300\">' + data.user + '</div>'}\n\t\t\t\t\t\t\t<div class=\"text-sm whitespace-pre-wrap\">${escapeHtml(data.content)}</div>\n\t\t\t\t\t\t\t<div class=\"text-xs mt-1 opacity-70\">${timestamp}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t${isOwnMessage ? '' : '<div class=\"w-8 h-8 rounded-full bg-gray-300 dark:bg-gray-600 flex items-center justify-center text-sm font-medium text-gray-700 dark:text-gray-300 order-1 mr-3\">' + data.user[0].toUpperCase() + '</div>'}\n\t\t\t\t`;\n\t\t\t\t\n\t\t\t\tchatBox.appendChild(messageDiv);\n\t\t\t\tchatBox.scrollTop = chatBox.scrollHeight;\n\t\t\t}\n\t\t\t\n\t\t\tfunction updateConnectionStatus(status, text) {\n\t\t\t\tconst statusDot = connectionStatus.querySelector('.w-2.h-2');\n\t\t\t\tconnectionStatus.querySelector('span:last-child').textContent = text;\n\t\t\t\t\n\t\t\t\tstatusDot.className = statusDot.className.replace(/bg-\\w+-\\d+/, '');\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase 'connected':\n\t\t\t\t\t\tstatusDot.classList.add('bg-green-500');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'connecting':\n\t\t\t\t\t\tstatusDot.classList.add('bg-yellow-500');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'disconnected':\n\t\t\t\t\t\tstatusDot.classList.add('bg-gray-400');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\tstatusDot.classList.add('bg-red-500');\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfunction showTypingIndicator(user) {\n\t\t\t\ttypingIndicator.querySelector('span:last-child').textContent = `${user} is typing...`;\n\t\t\t\ttypingIndicator.classList.remove('hidden');\n\t\t\t}\n\t\t\t\n\t\t\tfunction hideTypingIndicator() {\n\t\t\t\ttypingIndicator.classList.add('hidden');\n\t\t\t}\n\t\t\t\n\t\t\tfunction handleUserJoined(data) {\n\t\t\t\tonlineUsers.add(data.userId);\n\t\t\t\tupdateUserCount();\n\t\t\t\taddSystemMessage(`${data.user} joined the chat`);\n\t\t\t}\n\t\t\t\n\t\t\tfunction handleUserLeft(data) {\n\t\t\t\tonlineUsers.delete(data.userId);\n\t\t\t\tupdateUserCount();\n\t\t\t\taddSystemMessage(`${data.user} left the chat`);\n\t\t\t}\n\t\t\t\n\t\t\tfunction updateUserCount() {\n\t\t\t\tuserCount.textContent = `${onlineUsers.size} user${onlineUsers.size !== 1 ? 's' : ''} online`;\n\t\t\t}\n\t\t\t\n\t\t\tfunction addSystemMessage(text) {\n\t\t\t\tconst messageDiv = document.createElement('div');\n\t\t\t\tmessageDiv.className = 'flex justify-center';\n\t\t\t\tmessageDiv.innerHTML = `\n\t\t\t\t\t<div class=\"bg-gray-200 dark:bg-gray-700 text-gray-600 dark:text-gray-400 px-3 py-1 rounded-full text-sm\">\n\t\t\t\t\t\t${text}\n\t\t\t\t\t</div>\n\t\t\t\t`;\n\t\t\t\tchatBox.appendChild(messageDiv);\n\t\t\t\tchatBox.scrollTop = chatBox.scrollHeight;\n\t\t\t}\n\t\t\t\n\t\t\tfunction escapeHtml(text) {\n\t\t\t\tconst div = document.createElement('div');\n\t\t\t\tdiv.textContent = text;\n\t\t\t\treturn div.innerHTML;\n\t\t\t}\n\t\t\t\n\t\t\t// Initialize\n\t\t\tupdateUserCount();\n\t\t\tmessageInput.focus();\n\t\t</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = component.AppLayout(props.AppLayoutProps).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
