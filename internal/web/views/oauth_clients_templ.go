// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"hp/internal/web/views/component"
	"time"
)

type OAuthClient struct {
	ID            string
	Name          string
	Description   string
	RedirectURIs  []string
	IsPublic      bool
	Secret        string
	AllowedScopes []string
	CreatedAt     time.Time
	UpdatedAt     time.Time
}

type OAuthClientsPageProps struct {
	component.AppLayoutProps
	Clients []OAuthClient
}

func OAuthClientsPage(props OAuthClientsPageProps) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"main-content\"><div class=\"p-6\"><div class=\"mb-6 flex justify-between items-center\"><div><h1 class=\"text-2xl font-bold text-gray-900 dark:text-white\">Developer Portal</h1><p class=\"text-gray-600 dark:text-gray-400\">Manage your OAuth Clients and API access</p></div><button type=\"button\" class=\"px-4 py-2 bg-ocean text-white rounded-md hover:bg-ocean-700 focus:outline-none focus:ring-2 focus:ring-ocean-500 focus:ring-offset-2 dark:focus:ring-offset-gray-800\" onclick=\"document.getElementById('createClientModal').classList.remove('hidden')\"><i class=\"fas fa-plus mr-2\"></i> Create New Client</button></div><!-- OAuth Clients List --><div class=\"bg-white dark:bg-gray-800 shadow-sm rounded-lg overflow-hidden\"><div class=\"p-4 border-b border-gray-200 dark:border-gray-700\"><h2 class=\"text-lg font-medium text-gray-900 dark:text-white\">Your OAuth Clients</h2><p class=\"text-sm text-gray-500 dark:text-gray-400\">Applications that can request access to user data</p></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if len(props.Clients) == 0 {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<div class=\"p-6 text-center\"><p class=\"text-gray-500 dark:text-gray-400\">You haven't created any OAuth clients yet.</p><p class=\"text-sm mt-2 text-gray-400 dark:text-gray-500\">Create a client to integrate with AskFrank's API</p></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			} else {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "<div class=\"overflow-x-auto\"><table class=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\"><thead class=\"bg-gray-50 dark:bg-gray-700\"><tr><th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Name</th><th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Client ID</th><th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Type</th><th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Redirect URIs</th><th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Created</th><th scope=\"col\" class=\"px-6 py-3 text-right text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">Actions</th></tr></thead> <tbody class=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				for _, client := range props.Clients {
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<tr class=\"hover:bg-gray-50 dark:hover:bg-gray-750\"><td class=\"px-6 py-4 whitespace-nowrap\"><div class=\"text-sm font-medium text-gray-900 dark:text-white\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var3 string
					templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(client.Name)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/views/oauth_clients.templ`, Line: 70, Col: 88}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "</div>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					if client.Description != "" {
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "<div class=\"text-xs text-gray-500 dark:text-gray-400\">")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						var templ_7745c5c3_Var4 string
						templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(client.Description)
						if templ_7745c5c3_Err != nil {
							return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/views/oauth_clients.templ`, Line: 72, Col: 87}
						}
						_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "</div>")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "</td><td class=\"px-6 py-4 whitespace-nowrap\"><div class=\"text-sm text-gray-500 dark:text-gray-400\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var5 string
					templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(client.ID)
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/views/oauth_clients.templ`, Line: 76, Col: 77}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "</div></td><td class=\"px-6 py-4 whitespace-nowrap\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					if client.IsPublic {
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "<span class=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800 dark:bg-green-800 dark:text-green-100\">Public</span>")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
					} else {
						templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 11, "<span class=\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800 dark:bg-blue-800 dark:text-blue-100\">Confidential</span>")
						if templ_7745c5c3_Err != nil {
							return templ_7745c5c3_Err
						}
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 12, "</td><td class=\"px-6 py-4\"><div class=\"text-sm text-gray-500 dark:text-gray-400 max-h-16 overflow-y-auto\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					for i, uri := range client.RedirectURIs {
						if i < 2 {
							templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 13, "<div class=\"truncate max-w-xs\">")
							if templ_7745c5c3_Err != nil {
								return templ_7745c5c3_Err
							}
							var templ_7745c5c3_Var6 string
							templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(uri)
							if templ_7745c5c3_Err != nil {
								return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/views/oauth_clients.templ`, Line: 93, Col: 51}
							}
							_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
							if templ_7745c5c3_Err != nil {
								return templ_7745c5c3_Err
							}
							templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 14, "</div>")
							if templ_7745c5c3_Err != nil {
								return templ_7745c5c3_Err
							}
						} else if i == 2 && len(client.RedirectURIs) > 3 {
							templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 15, "<div>+")
							if templ_7745c5c3_Err != nil {
								return templ_7745c5c3_Err
							}
							var templ_7745c5c3_Var7 string
							templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(len(client.RedirectURIs) - 2)
							if templ_7745c5c3_Err != nil {
								return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/views/oauth_clients.templ`, Line: 95, Col: 51}
							}
							_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
							if templ_7745c5c3_Err != nil {
								return templ_7745c5c3_Err
							}
							templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 16, " more...</div>break")
							if templ_7745c5c3_Err != nil {
								return templ_7745c5c3_Err
							}
						} else if i < 3 {
							templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 17, "<div class=\"truncate max-w-xs\">")
							if templ_7745c5c3_Err != nil {
								return templ_7745c5c3_Err
							}
							var templ_7745c5c3_Var8 string
							templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(uri)
							if templ_7745c5c3_Err != nil {
								return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/views/oauth_clients.templ`, Line: 98, Col: 51}
							}
							_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
							if templ_7745c5c3_Err != nil {
								return templ_7745c5c3_Err
							}
							templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 18, "</div>")
							if templ_7745c5c3_Err != nil {
								return templ_7745c5c3_Err
							}
						}
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 19, "</div></td><td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var9 string
					templ_7745c5c3_Var9, templ_7745c5c3_Err = templ.JoinStringErrs(client.CreatedAt.Format("Jan 02, 2006"))
					if templ_7745c5c3_Err != nil {
						return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/web/views/oauth_clients.templ`, Line: 104, Col: 53}
					}
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var9))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 20, "</td><td class=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templ.RenderScriptItems(ctx, templ_7745c5c3_Buffer, templ.JSFuncCall("showClientDetails", client.ID))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 21, "<button type=\"button\" class=\"text-ocean hover:text-ocean-700 dark:text-aqua dark:hover:text-aqua-300 mr-3\" onclick=\"")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var10 templ.ComponentScript = templ.JSFuncCall("showClientDetails", client.ID)
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var10.Call)
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 22, "\"><i class=\"fas fa-eye\"></i></button> ")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templ.RenderScriptItems(ctx, templ_7745c5c3_Buffer, templ.JSFuncCall("confirmDeleteClient", client.ID, client.Name))
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 23, "<button type=\"button\" class=\"text-red-600 hover:text-red-800 dark:text-red-400 dark:hover:text-red-300\" onclick=\"")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					var templ_7745c5c3_Var11 templ.ComponentScript = templ.JSFuncCall("confirmDeleteClient", client.ID, client.Name)
					_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var11.Call)
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
					templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 24, "\"><i class=\"fas fa-trash-alt\"></i></button></td></tr>")
					if templ_7745c5c3_Err != nil {
						return templ_7745c5c3_Err
					}
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 25, "</tbody></table></div>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 26, "</div><!-- Create Client Modal --><div id=\"createClientModal\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden\"><div class=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-md w-full\"><div class=\"flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700\"><h3 class=\"text-lg font-medium text-gray-900 dark:text-white\">Create New OAuth Client</h3><button type=\"button\" class=\"text-gray-400 hover:text-gray-500\" onclick=\"document.getElementById('createClientModal').classList.add('hidden')\"><i class=\"fas fa-times\"></i></button></div><form id=\"createClientForm\" class=\"p-4\" onsubmit=\"event.preventDefault(); createOAuthClient();\"><div class=\"mb-4\"><label for=\"clientName\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Client Name</label> <input type=\"text\" id=\"clientName\" name=\"name\" required class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-ocean-500 focus:border-ocean-500 dark:bg-gray-700 dark:text-white\" placeholder=\"My Application\"></div><div class=\"mb-4\"><label for=\"clientDescription\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Description (optional)</label> <input type=\"text\" id=\"clientDescription\" name=\"description\" class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-ocean-500 focus:border-ocean-500 dark:bg-gray-700 dark:text-white\" placeholder=\"A brief description of your application\"></div><div class=\"mb-4\"><label for=\"redirectURIs\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Redirect URIs (one per line)</label> <textarea id=\"redirectURIs\" name=\"redirectURIs\" required rows=\"3\" class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-ocean-500 focus:border-ocean-500 dark:bg-gray-700 dark:text-white\" placeholder=\"https://example.com/callback\"></textarea><p class=\"mt-1 text-xs text-gray-500 dark:text-gray-400\">Must be valid URLs, including http:// or https://</p></div><div class=\"mb-4\"><label for=\"clientType\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Client Type</label> <select id=\"clientType\" name=\"is_public\" class=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:outline-none focus:ring-ocean-500 focus:border-ocean-500 dark:bg-gray-700 dark:text-white\"><option value=\"false\">Confidential (with client secret)</option> <option value=\"true\">Public (no client secret)</option></select></div><div class=\"mb-4\"><label class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">Allowed Scopes</label><div class=\"space-y-2\"><div class=\"flex items-center\"><input type=\"checkbox\" id=\"scope_read\" name=\"scopes\" value=\"read\" class=\"h-4 w-4 text-ocean-600 focus:ring-ocean-500 border-gray-300 rounded dark:border-gray-600 dark:bg-gray-700\" checked> <label for=\"scope_read\" class=\"ml-2 block text-sm text-gray-700 dark:text-gray-300\">Read</label></div><div class=\"flex items-center\"><input type=\"checkbox\" id=\"scope_write\" name=\"scopes\" value=\"write\" class=\"h-4 w-4 text-ocean-600 focus:ring-ocean-500 border-gray-300 rounded dark:border-gray-600 dark:bg-gray-700\"> <label for=\"scope_write\" class=\"ml-2 block text-sm text-gray-700 dark:text-gray-300\">Write</label></div></div></div><div class=\"flex justify-end pt-2 border-t border-gray-200 dark:border-gray-700\"><button type=\"button\" class=\"px-3 py-1.5 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-650 focus:outline-none mr-2\" onclick=\"document.getElementById('createClientModal').classList.add('hidden')\">Cancel</button> <button type=\"button\" id=\"createClientButton\" class=\"px-3 py-1.5 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-ocean hover:bg-ocean-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-ocean-500 dark:focus:ring-offset-gray-800\" onclick=\"createOAuthClient()\">Create Client</button></div></form></div></div><!-- Client Details Modal --><div id=\"clientDetailsModal\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden\"><div class=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-lg w-full\"><div class=\"flex justify-between items-center p-4 border-b border-gray-200 dark:border-gray-700\"><h3 class=\"text-lg font-medium text-gray-900 dark:text-white\" id=\"detailsClientName\">Client Details</h3><button type=\"button\" class=\"text-gray-400 hover:text-gray-500\" onclick=\"document.getElementById('clientDetailsModal').classList.add('hidden')\"><i class=\"fas fa-times\"></i></button></div><div class=\"p-4\"><div class=\"mb-4\"><h4 class=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Client ID</h4><div class=\"mt-1 flex items-center\"><pre id=\"detailsClientId\" class=\"text-sm bg-gray-100 dark:bg-gray-700 p-2 rounded w-full overflow-x-auto\"></pre><button class=\"ml-2 text-gray-500 hover:text-gray-700 dark:hover:text-gray-300\" onclick=\"copyToClipboard('detailsClientId')\"><i class=\"fas fa-copy\"></i></button></div></div><div id=\"secretContainer\" class=\"mb-4\"><h4 class=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Client Secret</h4><div class=\"mt-1 flex items-center\"><pre id=\"detailsClientSecret\" class=\"text-sm bg-gray-100 dark:bg-gray-700 p-2 rounded w-full overflow-x-auto\"></pre><button class=\"ml-2 text-gray-500 hover:text-gray-700 dark:hover:text-gray-300\" onclick=\"copyToClipboard('detailsClientSecret')\"><i class=\"fas fa-copy\"></i></button></div><p class=\"mt-1 text-xs text-red-500\">Note: This is the only time you'll see the full client secret. Save it securely.</p></div><div class=\"mb-4\"><h4 class=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Redirect URIs</h4><div class=\"mt-1\"><ul id=\"detailsRedirectUris\" class=\"text-sm bg-gray-100 dark:bg-gray-700 p-2 rounded\"></ul></div></div><div class=\"mb-4\"><h4 class=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Allowed Scopes</h4><div class=\"mt-1\"><div id=\"detailsScopes\" class=\"text-sm bg-gray-100 dark:bg-gray-700 p-2 rounded\"></div></div></div></div></div></div><!-- Delete Confirmation Modal --><div id=\"deleteClientModal\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden\"><div class=\"bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-md w-full\"><div class=\"p-4\"><div class=\"flex items-center justify-center text-red-500 mb-4\"><i class=\"fas fa-exclamation-triangle text-4xl\"></i></div><h3 class=\"text-lg font-medium text-center text-gray-900 dark:text-white mb-2\">Delete OAuth Client</h3><p class=\"text-sm text-center text-gray-500 dark:text-gray-400 mb-4\">Are you sure you want to delete <span id=\"deleteClientName\" class=\"font-medium\"></span>? This action cannot be undone.</p><form id=\"deleteClientForm\" class=\"flex justify-center space-x-4\" onsubmit=\"event.preventDefault();\"><input type=\"hidden\" id=\"deleteClientId\" name=\"clientId\"> <button type=\"button\" class=\"px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-650 focus:outline-none\" onclick=\"document.getElementById('deleteClientModal').classList.add('hidden')\">Cancel</button> <button type=\"button\" onclick=\"deleteOAuthClient(document.getElementById('deleteClientId').value)\" class=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 dark:focus:ring-offset-gray-800\">Delete</button></form></div></div></div><script>\n\t\t\t\t\tasync function createOAuthClient() {\n\t\t\t\t\t\t// Get CSRF token\n\t\t\t\t\t\tconst csrfToken = document.querySelector('meta[name=\"csrf-token\"]')?.getAttribute('content');\n\t\t\t\t\t\tif (!csrfToken) {\n\t\t\t\t\t\t\talert('CSRF token not found');\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Get form values\n\t\t\t\t\t\tconst name = document.getElementById('clientName').value;\n\t\t\t\t\t\tconst description = document.getElementById('clientDescription').value;\n\t\t\t\t\t\tconst redirectURIs = document.getElementById('redirectURIs').value;\n\t\t\t\t\t\tconst isPublic = document.getElementById('clientType').value;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Get selected scopes\n\t\t\t\t\t\tconst selectedScopes = [];\n\t\t\t\t\t\tif (document.getElementById('scope_read').checked) {\n\t\t\t\t\t\t\tselectedScopes.push('read');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (document.getElementById('scope_write').checked) {\n\t\t\t\t\t\t\tselectedScopes.push('write');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Validate form\n\t\t\t\t\t\tif (!name) {\n\t\t\t\t\t\t\talert('Client name is required');\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!redirectURIs) {\n\t\t\t\t\t\t\talert('At least one redirect URI is required');\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (selectedScopes.length === 0) {\n\t\t\t\t\t\t\talert('At least one scope must be selected');\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Disable button and show loading state\n\t\t\t\t\t\tconst button = document.getElementById('createClientButton');\n\t\t\t\t\t\tbutton.disabled = true;\n\t\t\t\t\t\tbutton.textContent = 'Creating...';\n\t\t\t\t\t\t\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t// Send request to create client\n\t\t\t\t\t\t\tconst response = await fetch('/developer/clients', {\n\t\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t'X-CSRF-Token': csrfToken,\n\t\t\t\t\t\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tbody: new URLSearchParams({\n\t\t\t\t\t\t\t\t\t'name': name,\n\t\t\t\t\t\t\t\t\t'description': description,\n\t\t\t\t\t\t\t\t\t'redirectURIs': redirectURIs,\n\t\t\t\t\t\t\t\t\t'isPublic': isPublic,\n\t\t\t\t\t\t\t\t\t'scopes': selectedScopes.join(',')\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (!response.ok) {\n\t\t\t\t\t\t\t\tthrow new Error(`HTTP error! status: ${response.status}`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tconst data = await response.json();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Hide the modal\n\t\t\t\t\t\t\tdocument.getElementById('createClientModal').classList.add('hidden');\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Show success and client details if available\n\t\t\t\t\t\t\tif (data.id) {\n\t\t\t\t\t\t\t\t// Show the client details in the details modal\n\t\t\t\t\t\t\t\tdocument.getElementById('detailsClientName').textContent = data.name;\n\t\t\t\t\t\t\t\tdocument.getElementById('detailsClientId').textContent = data.id;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Show or hide secret based on client type\n\t\t\t\t\t\t\t\tconst secretContainer = document.getElementById('secretContainer');\n\t\t\t\t\t\t\t\tif (data.isPublic) {\n\t\t\t\t\t\t\t\t\tsecretContainer.classList.add('hidden');\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsecretContainer.classList.remove('hidden');\n\t\t\t\t\t\t\t\t\tdocument.getElementById('detailsClientSecret').textContent = data.secret || 'N/A';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Show redirect URIs\n\t\t\t\t\t\t\t\tconst uriList = document.getElementById('detailsRedirectUris');\n\t\t\t\t\t\t\t\turiList.innerHTML = '';\n\t\t\t\t\t\t\t\tdata.redirectURIs.forEach(uri => {\n\t\t\t\t\t\t\t\t\tconst li = document.createElement('li');\n\t\t\t\t\t\t\t\t\tli.textContent = uri;\n\t\t\t\t\t\t\t\t\turiList.appendChild(li);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Show scopes\n\t\t\t\t\t\t\t\tconst scopesEl = document.getElementById('detailsScopes');\n\t\t\t\t\t\t\t\tscopesEl.innerHTML = '';\n\t\t\t\t\t\t\t\tif (data.allowedScopes && data.allowedScopes.length > 0) {\n\t\t\t\t\t\t\t\t\tscopesEl.textContent = data.allowedScopes.join(', ');\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tscopesEl.textContent = 'No scopes defined';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Show the details modal\n\t\t\t\t\t\t\t\tdocument.getElementById('clientDetailsModal').classList.remove('hidden');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// If we don't have details, just reload the page\n\t\t\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tconsole.error('Error creating OAuth client:', error);\n\t\t\t\t\t\t\talert('Failed to create OAuth client. Please try again.');\n\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t// Reset button state\n\t\t\t\t\t\t\tbutton.disabled = false;\n\t\t\t\t\t\t\tbutton.textContent = 'Create Client';\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Reset form\n\t\t\t\t\t\t\tdocument.getElementById('createClientForm').reset();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfunction showClientDetails(clientId) {\n\t\t\t\t\t\t// Get CSRF token\n\t\t\t\t\t\tconst csrfToken = document.querySelector('meta[name=\"csrf-token\"]')?.getAttribute('content');\n\t\t\t\t\t\tif (!csrfToken) {\n\t\t\t\t\t\t\talert('CSRF token not found');\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Fetch client details from the server\n\t\t\t\t\t\tfetch(`/api/developer/clients/${clientId}`, {\n\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t'X-CSRF-Token': csrfToken\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.then(response => response.json())\n\t\t\t\t\t\t\t.then(client => {\n\t\t\t\t\t\t\t\tdocument.getElementById('detailsClientName').textContent = client.name;\n\t\t\t\t\t\t\t\tdocument.getElementById('detailsClientId').textContent = client.id;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Show or hide secret based on client type\n\t\t\t\t\t\t\t\tconst secretContainer = document.getElementById('secretContainer');\n\t\t\t\t\t\t\t\tif (client.isPublic) {\n\t\t\t\t\t\t\t\t\tsecretContainer.classList.add('hidden');\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsecretContainer.classList.remove('hidden');\n\t\t\t\t\t\t\t\t\tdocument.getElementById('detailsClientSecret').textContent = client.secret || 'N/A';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Show redirect URIs\n\t\t\t\t\t\t\t\tconst uriList = document.getElementById('detailsRedirectUris');\n\t\t\t\t\t\t\t\turiList.innerHTML = '';\n\t\t\t\t\t\t\t\tclient.redirectURIs.forEach(uri => {\n\t\t\t\t\t\t\t\t\tconst li = document.createElement('li');\n\t\t\t\t\t\t\t\t\tli.textContent = uri;\n\t\t\t\t\t\t\t\t\turiList.appendChild(li);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Show scopes\n\t\t\t\t\t\t\t\tconst scopesEl = document.getElementById('detailsScopes');\n\t\t\t\t\t\t\t\tscopesEl.innerHTML = '';\n\t\t\t\t\t\t\t\tif (client.allowedScopes && client.allowedScopes.length > 0) {\n\t\t\t\t\t\t\t\t\tscopesEl.textContent = client.allowedScopes.join(', ');\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tscopesEl.textContent = 'No scopes defined';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tdocument.getElementById('clientDetailsModal').classList.remove('hidden');\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\t\t\tconsole.error('Error fetching client details:', error);\n\t\t\t\t\t\t\t\talert('Failed to load client details');\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfunction confirmDeleteClient(clientId, clientName) {\n\t\t\t\t\t\tdocument.getElementById('deleteClientName').textContent = clientName;\n\t\t\t\t\t\tdocument.getElementById('deleteClientId').value = clientId;\n\t\t\t\t\t\tdocument.getElementById('deleteClientModal').classList.remove('hidden');\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tasync function deleteOAuthClient(clientId) {\n\t\t\t\t\t\t// Get CSRF token\n\t\t\t\t\t\tconst csrfToken = document.querySelector('meta[name=\"csrf-token\"]')?.getAttribute('content');\n\t\t\t\t\t\tif (!csrfToken) {\n\t\t\t\t\t\t\talert('CSRF token not found');\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t// Send delete request\n\t\t\t\t\t\t\tconst response = await fetch(`/developer/clients/${clientId}/delete`, {\n\t\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t'X-CSRF-Token': csrfToken\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (!response.ok) {\n\t\t\t\t\t\t\t\tthrow new Error(`HTTP error! status: ${response.status}`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// Hide the modal and refresh the page\n\t\t\t\t\t\t\tdocument.getElementById('deleteClientModal').classList.add('hidden');\n\t\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tconsole.error('Error deleting OAuth client:', error);\n\t\t\t\t\t\t\talert('Failed to delete OAuth client. Please try again.');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfunction copyToClipboard(elementId) {\n\t\t\t\t\t\tconst text = document.getElementById(elementId).textContent;\n\t\t\t\t\t\tnavigator.clipboard.writeText(text).then(() => {\n\t\t\t\t\t\t\t// Show a temporary tooltip or notification\n\t\t\t\t\t\t\talert('Copied to clipboard!');\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t</script></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = component.AppLayout(props.AppLayoutProps).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
